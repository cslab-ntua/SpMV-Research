# Makefile.in generated by automake 1.16.4 from Makefile.am.
# test/src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Makefile.am -- SparseX tests
#
# Copyright (C) 2014, Computing Systems Laboratory (CSLab), NTUA
# Copyright (C) 2014, Vasileios Karakasis
# All righrs reserved.
#
# This file is distributed under the BSD License. See LICENSE.txt for details.
#

.phony: all clean

CPATH = 
define NEWLINE


endef

shell_out := $(shell ../config.sh)
shell_out := $(subst ;,$(NEWLINE),$(shell_out))
$(eval $(shell_out))

AMG_PATH = ../../../../artificial-matrix-generator
library = ../../../../lib


CC = gcc
# CC = clang
# CC = xlc

CPP = g++
# CPP = clang++
# CPP = xlc++


ARCH = $(shell uname -m)


CFLAGS =
CFLAGS += -Wall -Wextra
CFLAGS += -pipe  # Tells the compiler to use pipes instead of temporary files (faster compilation, but uses more memory).
CFLAGS += -Wno-unused-variable
CFLAGS += -Wno-unused-but-set-variable
CFLAGS += -Wno-unused-parameter
CFLAGS += -Wno-sign-compare
CFLAGS += -Wno-unused-local-typedefs
CFLAGS += -fopenmp

# CFLAGS += -g
# CFLAGS += -g3 -fno-omit-frame-pointer
# CFLAGS += -Og
# CFLAGS += -O0
# CFLAGS += -O2
CFLAGS += -O3

CFLAGS += -flto
ifeq ($(ARCH), x86_64)
    CFLAGS += -march=native
else
    CFLAGS += -mcpu=native
endif

CFLAGS += -I'$(library)'
CFLAGS += -I'$(AMG_PATH)'
CFLAGS += -I'$(BOOST_INC_PATH)'
CFLAGS += -I'$(LLVM_INC_PATH)'
CFLAGS += -I$(SPARSEX_INC_PATH)


CFLAGS += -D'INT_T=int32_t'

# DOUBLE := 0
DOUBLE := 1
CFLAGS += -D'DOUBLE=$(DOUBLE)'


CFLAGS += $(shell ${SPARSEX_CONF_PATH}/sparsex-config --cppflags)



CPPFLAGS = $(CFLAGS)
CPPFLAGS += -Wno-deprecated-copy
CPPFLAGS += -Wno-placement-new
CPPFLAGS += -Wno-deprecated-declarations
CPPFLAGS += -Wno-parentheses



LDFLAGS =

LDFLAGS += -lm


LDFLAGS += $(shell ${SPARSEX_CONF_PATH}/sparsex-config --ldflags)
LDFLAGS += -L'$(BOOST_LIB_PATH)'
LDFLAGS += -L'$(LLVM_LIB_PATH)'
# LDFLAGS += -L'$(SPARSEX_LIB_PATH)'

LDFLAGS += -lboost_regex
LDFLAGS += -lboost_serialization
LDFLAGS += -lboost_system
LDFLAGS += -lboost_atomic

# LDFLAGS += -lnuma
# LDFLAGS += -lz -ltinfo -lrt -lgomp -lpthread -ldl -lpapi -fopenmp


# This needs to be put FIRST.
LDFLAGS := -Wl,--no-as-needed $(LDFLAGS)


spmv_sparsex.exe: sparsex_test.o CsxCheck.o artificial_matrix_generation.o ordered_set.o rapl.o
# spmv_sparsex.exe: sparsex_test.o artificial_matrix_generation.o ordered_set.o rapl.o
	$(CPP) $(CPPFLAGS) $^ -o $@ $(LDFLAGS)

# $(CPP) $(CFLAGS) $^ -o $@  -Wl,--no-as-needed  /various/dgal/epyc1/sparsex/build/..//src/api/.libs/libsparsex.so /various/dgal/epyc1/sparsex/src/internals/.libs/libsparseximpl.so -L/various/dgal/epyc1/boost_1_55_0/bin/lib/ -L/various/dgal/epyc1/llvm-6.0.0/build/lib -lboost_regex -lboost_serialization -lboost_system -lboost_atomic -lclangCodeGen -lclangAST -lclangASTMatchers -lclangAnalysis -lclangBasic -lclangDriver -lclangFrontend -lclangFrontendTool -lclangLex -lclangParse -lclangSema -lclangEdit -lclangRewrite -lclangRewriteFrontend -lclangStaticAnalyzerFrontend -lclangStaticAnalyzerCheckers -lclangStaticAnalyzerCore -lclangSerialization -lclangToolingCore -lclangTooling -lclangFormat -lLLVMOption -lLLVMX86Disassembler -lLLVMX86AsmParser -lLLVMX86CodeGen -lLLVMGlobalISel -lLLVMSelectionDAG -lLLVMAsmPrinter -lLLVMDebugInfoCodeView -lLLVMDebugInfoMSF -lLLVMX86Desc -lLLVMMCDisassembler -lLLVMX86Info -lLLVMX86AsmPrinter -lLLVMX86Utils -lLLVMMCJIT -lLLVMExecutionEngine -lLLVMRuntimeDyld -lLLVMLTO -lLLVMPasses -lLLVMObjCARCOpts -lLLVMCodeGen -lLLVMTarget -lLLVMCoverage -lLLVMCoroutines -lLLVMipo -lLLVMInstrumentation -lLLVMVectorize -lLLVMScalarOpts -lLLVMLinker -lLLVMIRReader -lLLVMAsmParser -lLLVMInstCombine -lLLVMTransformUtils -lLLVMBitWriter -lLLVMAnalysis -lLLVMProfileData -lLLVMObject -lLLVMMCParser -lLLVMMC -lLLVMBitReader -lLLVMCore -lLLVMBinaryFormat -lLLVMSupport -lLLVMDemangle -lz -ltinfo -lnuma -lrt -lgomp -lpthread -lm -ldl -lpapi -fopenmp


CsxCheck.o: CsxCheck.cpp
	$(CPP) $(CPPFLAGS) -c -o CsxCheck.o CsxCheck.cpp

sparsex_test.o: sparsex_test.c
	$(CC) $(CFLAGS) -c -o sparsex_test.o sparsex_test.c

artificial_matrix_generation.o: ../../../../artificial-matrix-generator/artificial_matrix_generation.c
	$(CC) $(CFLAGS) -c -o artificial_matrix_generation.o ../../../../artificial-matrix-generator/artificial_matrix_generation.c

ordered_set.o: ../../../../artificial-matrix-generator/ordered_set.c
	$(CC) $(CFLAGS) -c -o ordered_set.o ../../../../artificial-matrix-generator/ordered_set.c

rapl.o: ../../../../lib/monitoring/power/rapl.c
	$(CC) $(CFLAGS) -c -o rapl.o ../../../../lib/monitoring/power/rapl.c



clean:
	$(RM) obj/*.o obj/*.d *.o *.exe a.out test_sparsex
	$(RM) -r .deps .libs


